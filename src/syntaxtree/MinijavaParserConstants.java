/* Generated By:JavaCC: Do not edit this line. MinijavaParserConstants.java */
package syntaxtree;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MinijavaParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CLASS = 1;
  /** RegularExpression Id. */
  int PUBLIC = 2;
  /** RegularExpression Id. */
  int STATIC = 3;
  /** RegularExpression Id. */
  int VOID = 4;
  /** RegularExpression Id. */
  int MAIN = 5;
  /** RegularExpression Id. */
  int STRING = 6;
  /** RegularExpression Id. */
  int LPAR = 7;
  /** RegularExpression Id. */
  int RPAR = 8;
  /** RegularExpression Id. */
  int LBRACE = 9;
  /** RegularExpression Id. */
  int RBRACE = 10;
  /** RegularExpression Id. */
  int LBRACKET = 11;
  /** RegularExpression Id. */
  int RBRACKET = 12;
  /** RegularExpression Id. */
  int IF = 13;
  /** RegularExpression Id. */
  int ELSE = 14;
  /** RegularExpression Id. */
  int EXTENDS = 15;
  /** RegularExpression Id. */
  int RETURN = 16;
  /** RegularExpression Id. */
  int WHILE = 17;
  /** RegularExpression Id. */
  int SYSOUT = 18;
  /** RegularExpression Id. */
  int LENGTH = 19;
  /** RegularExpression Id. */
  int NEW = 20;
  /** RegularExpression Id. */
  int SEMICOLON = 21;
  /** RegularExpression Id. */
  int COMMA = 22;
  /** RegularExpression Id. */
  int DOT = 23;
  /** RegularExpression Id. */
  int EQUALS = 24;
  /** RegularExpression Id. */
  int TRUE = 25;
  /** RegularExpression Id. */
  int FALSE = 26;
  /** RegularExpression Id. */
  int THIS = 27;
  /** RegularExpression Id. */
  int NOT = 28;
  /** RegularExpression Id. */
  int INT = 29;
  /** RegularExpression Id. */
  int BOOLEAN = 30;
  /** RegularExpression Id. */
  int DIGIT = 31;
  /** RegularExpression Id. */
  int LETTER = 32;
  /** RegularExpression Id. */
  int UC_LETTER = 33;
  /** RegularExpression Id. */
  int ID = 34;
  /** RegularExpression Id. */
  int AND = 35;
  /** RegularExpression Id. */
  int MINUS = 36;
  /** RegularExpression Id. */
  int PLUS = 37;
  /** RegularExpression Id. */
  int TIMES = 38;
  /** RegularExpression Id. */
  int LESS_THAN = 39;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 40;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"class\"",
    "\"public\"",
    "\"static\"",
    "\"void\"",
    "\"main\"",
    "\"String\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\"if\"",
    "\"else\"",
    "\"extends\"",
    "\"return\"",
    "\"while\"",
    "\"System.out.println\"",
    "\"length\"",
    "\"new\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"=\"",
    "\"true\"",
    "\"false\"",
    "\"this\"",
    "\"!\"",
    "\"int\"",
    "\"boolean\"",
    "<DIGIT>",
    "<LETTER>",
    "<UC_LETTER>",
    "<ID>",
    "\"&&\"",
    "\"-\"",
    "\"+\"",
    "\"*\"",
    "\"<\"",
    "<INTEGER_LITERAL>",
    "<token of kind 41>",
    "<token of kind 42>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
  };

}
